name: Packer Image Build on PR Merge

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  build-packer-image:
    if: github.event.pull_request.merged == true
    name: Package Application and Build Packer AMI
    runs-on: ubuntu-latest
    environment: development

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GCP_ACCESS_KEY: ${{ secrets.GCP_ACCESS_KEY }}

      # Application Variables
      DB_URL: ${{ secrets.DB_URL }}
      DB_USRNAME: ${{ secrets.DB_USRNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      # Packer Variables (Automatically Picked Up)
      PKR_VAR_DB_URL: ${{ secrets.DB_URL }}
      PKR_VAR_DB_USRNAME: ${{ secrets.DB_USRNAME }}
      PKR_VAR_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      PKR_VAR_DB_NAME: ${{ secrets.DB_DATABASE }}
      PKR_VAR_VOLUME_SIZE: ${{ secrets.VOLUME_SIZE }}
      PKR_VAR_VOLUME_TYPE: ${{ secrets.VOLUME_TYPE }}
      PKR_VAR_SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      PKR_VAR_SUBNET_ID: ${{ secrets.SUBNET_ID }}
      PKR_VAR_INSTANCE_TYPE: ${{ secrets.INSTANCE_TYPE }}
      PKR_VAR_REGION: ${{ secrets.REGION }}
      PKR_VAR_AMI_USER: ${{ secrets.AMI_USER }}
      PKR_VAR_GCP_MACHINE_TYPE: ${{ secrets.GCP_MACHINE_TYPE }}
      PKR_VAR_GCP_DEMO_PROJECT_ID: ${{ secrets.GCP_DEMO_PROJECT_ID }}

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3


    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1

      - name: Set Up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Build the HealthCheck JAR file
        run: |
          cd ../HealthCheck  # Navigate to the directory containing your Spring Boot app
          mvn clean -B package  # Build the JAR file (ensure your pom.xml is correctly configured)
        working-directory: HealthCheck  # Navigate to the 'HealthCheck' directory before running the command


      - name: Install Packer
        uses: hashicorp/setup-packer@main

      # - name: Install Packer Google Cloud Plugin
      #   run: cd ../packer && packer plugins install github.com/hashicorp/googlecompute

      - name: Initialize Packer
        working-directory: packer
        run: packer init .

      - name: Run Packer fmt Check
        working-directory: packer
        run: packer fmt -check .

      - name: Run Packer Validate
        working-directory: packer
        run: packer validate .

      - name: Run Packer Build
        working-directory: packer
        run: packer build .